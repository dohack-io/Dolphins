plugins {
	id 'java' // java support
	id 'application' // creates a JVM executable
	id 'com.diffplug.gradle.spotless' version '3.23.0'// code format
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

ext {
	//version (changing these should be considered thoroughly!)
	javaVersion = JavaVersion.VERSION_1_8

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
	mainClass = 'de.dohack.dolphins.DolphinsApplication'
}
//apply plugin: 'org.springframework.boot'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'

repositories {
	mavenLocal() //searches in local maven repository, typically ~/.m2/repository
	jcenter() //searches in bintray's repository 'jCenter', which contains Maven Central
}


dependencies {

	// logging
	compile 'org.apache.logging.log4j:log4j-1.2-api:2.+' // log4j
	compile 'org.apache.logging.log4j:log4j-core:2.+' // log4j

	// database
	compile 'org.postgresql:postgresql:+'
	compile 'org.hibernate:hibernate-entitymanager:5.4.5.Final'

	// testing
	testCompile 'junit:junit:+'

	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-dependencies:2.1.8.RELEASE'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
}

wrapper {
	gradleVersion = '5.4.1'
}

version = '0.1-SNAPSHOT'
description = 'DOLPHINS'
group = 'de.dohack'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

application {
	mainClassName = mainClass
}

run {
	//Gradle uses an empty Input as default, leading to a non - blocking behaviour and thus an immediate shutdown
	standardInput = System.in
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	manifest {
		attributes(
				'Main-Class': mainClass
		)
	}
}
